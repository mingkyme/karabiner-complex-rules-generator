{"version":3,"sources":["helpers.ts","components/shared/AppExpansionPanel.tsx","components/forms/FrontmostConditionForm.tsx","components/forms/DeviceIfConditionForm.tsx","components/forms/KeyboardTypeConditionForm.tsx","components/forms/VariableConditionForm.tsx","components/forms/InputSourceConditionForm.tsx","components/forms/EventChangedConditionForm.tsx","components/forms/AddConditionForm.tsx","constants.ts","components/shared/KeyInput.tsx","components/shared/KeyCodeAndPointingButtonInput.tsx","ducks/formState.ts","components/forms/ToEventForm.tsx","components/forms/FromEventForm.tsx","components/forms/ToEventFormsContainer.tsx","components/shared/AppSelect.tsx","components/forms/ManipulatorForm.tsx","components/forms/RuleForm.tsx","components/MainForm.tsx","AppLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["suffix","n","d","withSuffix","titleCase","string","sentence","toLowerCase","split","i","length","toUpperCase","slice","join","AppExpansionPanel","title","children","panelProps","ExpansionPanel","aria-label","aria-controls","ExpansionPanelSummary","expandIcon","Box","p","FrontmostConditionForm","condition","setConditionState","bundle_identifiers","defaultExpanded","map","identifier","bundleIndex","TextField","key","value","fullWidth","variant","label","onChange","e","newCondition","bundleIdentifiers","setBundleIdentifier","target","file_paths","filePath","filePathIndex","filePaths","setFilePath","mt","ButtonGroup","Button","color","onClick","push","DeviceIfConditionForm","setIdentifier","index","newIdentifiers","identifiers","FormControlLabel","control","Checkbox","checked","is_keyboard","is_pointing_device","deviceIdentifiers","KeyboardTypeConditionForm","Autocomplete","options","multiple","freeSolo","keyboard_types","_e","autoHighlight","renderInput","params","VariableConditionForm","name","InputSourceConditionForm","EventChangedConditionForm","FormControl","component","FormLabel","RadioGroup","defaultValue","Radio","conditionTypes","AddConditionForm","setManipulator","manipulator","newManipulator","newConditions","conditions","InputLabel","id","Select","labelId","type","item","MenuItem","description","indexOf","MODIFIERS","KEY_CODES","ALL_KEYS","KeyInput","modifiers","keyCodes","placeholderText","getOptionLabel","o","placeholder","pointingButtons","KeyCodeAndPointingButtonInput","eventObject","setEventObject","obj","useState","keyCode","consumerKeyCode","showOptional","setShowOptional","useEffect","newOptional","key_code","consumer_key_code","console","log","useMemo","marginBottom","disabled","marginTop","v","margin","currentTarget","mb","pointing_button","event","initialManipulator","from","mandatory","optional","simultaneous","simultaneous_options","detect_key_down_uninterruptedly","to_after_key_up","to","to_if_alone","to_if_held_down","to_delayed_action","to_if_invoked","to_if_canceled","getInitialRule","manipulators","initialFormState","rules","setWholeState","state","payload","ruleIndex","addToObject","manipulatorIndex","toField","ToEventForm","toObject","setToObject","removeToObject","pointingButton","simultaneousOptions","newToObject","m","lazy","repeat","halt","className","startIcon","keyOrder","keyUpWhen","FromEventForm","fromObject","dispatch","useDispatch","_setFromObject","handleModifierChange","newSimultaneousObject","newFromObject","newSim","splice","addSimultaneous","key_down_order","key_up_order","key_up_when","toEvent","currentToField","simOpts","toAfterKeyUp","toFields","toDelayedAction","TheForm","_setManipulator","toEventFormProps","includes","_toDelayedAction","_toField","ToEventFormsContainer","addToEventForm","totalDelayedAction","toFieldsIndex","size","AppSelect","option","types","ManipulatorForm","addConditionToRule","RuleForm","rule","stopPropagation","onFocus","setRule","multiline","justifyContent","removeRule","parseJSONfirst","text","parsedJSON","JSON","parse","kc","_","find","parseKey","parseKeys","parseRuleObject","_rule","_from","isEmpty","sim","isEqual","parseFromObject","forEach","_to","parseToObject","MainForm","formState","useSelector","window","atob","location","href","parsedState","cloneDeep","parseStateToMinimumJSON","titleForm","Container","Grid","container","direction","justify","xs","Typography","readOnly","stringify","base64string","btoa","url","history","replaceState","undefined","alert","onBlur","AppLayout","AppBar","position","Toolbar","data-icon","data-size","data-show-count","store","createStore","action","produce","draft","initToObj","manip","toIndex","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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,MAAO,gBACPH,MAAO,iBAET,CACEG,MAAO,oBACPH,MAAO,YAET,CACEG,MAAO,qBACPH,MAAO,aAET,CACEG,MAAO,aACPH,MAAO,cAET,CACEG,MAAO,cACPH,MAAO,gBAGEsE,EAAY,CACvB,CACEnE,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,IACPH,MAAO,KAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,KACPH,MAAO,MAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,MACPH,MAAO,OAET,CACEG,MAAO,SACPH,MAAO,UAET,CACEG,MAAO,wBACPH,MAAO,0BAET,CACEG,MAAO,UACPH,MAAO,OAET,CACEG,MAAO,YACPH,MAAO,aAET,CACEG,MAAO,WACPH,MAAO,YAET,CACEG,MAAO,WACPH,MAAO,YAET,CACEG,MAAO,aACPH,MAAO,cAET,CACEG,MAAO,aACPH,MAAO,cAET,CACEG,MAAO,cACPH,MAAO,eAET,CACEG,MAAO,QACPH,MAAO,mBAET,CACEG,MAAO,eACPH,MAAO,aAET,CACEG,MAAO,mBACPH,MAAO,gBAET,CACEG,MAAO,oBACPH,MAAO,iBAET,CACEG,MAAO,gBACPH,MAAO,aAET,CACEG,MAAO,YACPH,MAAO,SAET,CACEG,MAAO,YACPH,MAAO,SAET,CACEG,MAAO,aACPH,MAAO,UAET,CACEG,MAAO,YACPH,MAAO,SAET,CACEG,MAAO,qBACPH,MAAO,UAET,CACEG,MAAO,YACPH,MAAO,cAET,CACEG,MAAO,sBACPH,MAAO,uBAET,CACEG,MAAO,6BACPH,MAAO,gCAET,CACEG,MAAO,6BACPH,MAAO,gCAET,CACEG,MAAO,kBACPH,MAAO,mBAET,CACEG,MAAO,YACPH,MAAO,aAET,CACEG,MAAO,+BACPH,MAAO,0BAET,CACEG,MAAO,+BACPH,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","file":"static/js/main.b333ebc1.chunk.js","sourcesContent":["export const suffix = (n: number) => {\n  var s = ['th', 'st', 'nd', 'rd'];\n  var d = (n | 0) % 100;\n  return d > 3 && d < 21 ? 'th' : s[d % 10] || 'th';\n};\n\nexport const withSuffix = (n: number) => {\n  return `${n}${suffix(n)}`;\n};\n\nexport const titleCase = (string: string) => {\n  var sentence = string.toLowerCase().split('_');\n  for (var i = 0; i < sentence.length; i++) {\n    sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\n  }\n  return sentence.join(' ');\n};\n","import React, { ReactChild } from 'react';\nimport {\n  Typography,\n  ExpansionPanelSummary,\n  ExpansionPanel,\n  Box,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\ninterface Props {\n  title: any;\n  children: any;\n  panelProps?: any;\n}\n\nconst AppExpansionPanel: React.FC<Props> = ({\n  title,\n  children,\n  panelProps = {},\n}) => {\n  return (\n    <ExpansionPanel\n      {...panelProps}\n      aria-label=\"Expand\"\n      aria-controls=\"additional-actions3-content\"\n    >\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        {title}\n      </ExpansionPanelSummary>\n      <Box p={2}>{children}</Box>\n    </ExpansionPanel>\n  );\n};\n\nexport default AppExpansionPanel;\n","import React from 'react';\nimport { Box, TextField, ButtonGroup, Button } from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst FrontmostConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  const setFilePath = (bundleIndex: number, value: string) => {\n    const newCondition: any = { ...condition };\n    const filePaths = [...newCondition.file_paths];\n    filePaths[bundleIndex] = value;\n    newCondition.file_paths = filePaths;\n    setConditionState(newCondition);\n  };\n  const setBundleIdentifier = (bundleIndex: number, value: string) => {\n    const newCondition: any = { ...condition };\n    const bundleIdentifiers = [...newCondition.bundle_identifiers];\n    bundleIdentifiers[bundleIndex] = value;\n    newCondition.bundle_identifiers = bundleIdentifiers;\n    setConditionState(newCondition);\n  };\n  const addBundleIdentifier = () => {\n    const newCondition: any = { ...condition };\n    newCondition.bundle_identifiers = newCondition.bundle_identifiers || [];\n    const bundleIdentifiers = [...newCondition.bundle_identifiers];\n    bundleIdentifiers.push('');\n    newCondition.bundle_identifiers = bundleIdentifiers;\n    setConditionState(newCondition);\n  };\n\n  const addFilePath = () => {\n    const newCondition: any = { ...condition };\n    newCondition.file_paths = newCondition.file_paths || [];\n    const filePaths = [...newCondition.file_paths];\n    filePaths.push('');\n    newCondition.file_paths = filePaths;\n    setConditionState(newCondition);\n  };\n\n  return (\n    <Box>\n      <Box>\n        {!!condition?.bundle_identifiers?.length && (\n          <AppExpansionPanel\n            panelProps={{ defaultExpanded: true }}\n            title=\"Bundle Identifiers\"\n          >\n            {condition.bundle_identifiers.map(\n              (identifier: string, bundleIndex: number) => (\n                <TextField\n                  key={bundleIndex}\n                  value={identifier}\n                  fullWidth\n                  variant=\"filled\"\n                  label={`Regex Bundle Identifier ${bundleIndex + 1}`}\n                  onChange={e => {\n                    setBundleIdentifier(bundleIndex, e.target.value);\n                  }}\n                />\n              ),\n            )}\n          </AppExpansionPanel>\n        )}\n        {!!condition?.file_paths?.length && (\n          <AppExpansionPanel\n            panelProps={{ defaultExpanded: true }}\n            title=\"File Paths\"\n          >\n            {condition.file_paths.map(\n              (filePath: string, filePathIndex: number) => (\n                <TextField\n                  key={filePathIndex}\n                  value={filePath}\n                  fullWidth\n                  variant=\"filled\"\n                  label={`Regex File Path ${filePathIndex + 1}`}\n                  onChange={e => {\n                    setFilePath(filePathIndex, e.target.value);\n                  }}\n                />\n              ),\n            )}\n          </AppExpansionPanel>\n        )}\n      </Box>\n      <Box mt={2}>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={addBundleIdentifier}\n          >\n            Add Bundle Identifier\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={addFilePath}>\n            Add File Path\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FrontmostConditionForm;\n","import React from 'react';\nimport {\n  Box,\n  TextField,\n  ButtonGroup,\n  Button,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { withSuffix, titleCase } from '../../helpers';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst DeviceIfConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  const addDeviceIdentifier = () => {\n    const newCondition: any = { ...condition };\n    newCondition.identifiers = newCondition.identifiers || [];\n    const deviceIdentifiers = [...newCondition.identifiers];\n    deviceIdentifiers.push('');\n    newCondition.identifiers = deviceIdentifiers;\n    setConditionState(newCondition);\n  };\n\n  const setIdentifier = (identifier: any, index: number) => {\n    const newCondition = { ...condition };\n    const newIdentifiers = [...newCondition.identifiers];\n    newIdentifiers[index] = identifier;\n    newCondition.identifiers = newIdentifiers;\n    setConditionState(newCondition);\n  };\n\n  return (\n    <Box>\n      <Box>\n        {!!condition?.identifiers?.length && (\n          <AppExpansionPanel\n            panelProps={{ defaultExpanded: true }}\n            title=\"Device Identifiers\"\n          >\n            {condition.identifiers.map((identifier, index: number) => (\n              <AppExpansionPanel\n                title={`${withSuffix(index + 1)} Device Identifier`}\n                key={index}\n              >\n                {['vendor_id', 'product_id', 'location_id'].map(key => {\n                  return (\n                    <TextField\n                      key={key}\n                      fullWidth\n                      label={titleCase(key) + ' (Optional)'}\n                      variant=\"filled\"\n                      value={identifier[key]}\n                      onChange={e => {\n                        setIdentifier(\n                          { ...identifier, [key]: e.target.value },\n                          index,\n                        );\n                      }}\n                    />\n                  );\n                })}\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={!!identifier.is_keyboard}\n                      onChange={e => {\n                        setIdentifier(\n                          { ...identifier, is_keyboard: e.target.checked },\n                          index,\n                        );\n                      }}\n                    />\n                  }\n                  label=\"Is Keyboard?\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={!!identifier.is_pointing_device}\n                      onChange={e => {\n                        setIdentifier(\n                          {\n                            ...identifier,\n                            is_pointing_device: e.target.checked,\n                          },\n                          index,\n                        );\n                      }}\n                    />\n                  }\n                  label=\"Is Pointing Device?\"\n                />\n              </AppExpansionPanel>\n            ))}\n          </AppExpansionPanel>\n        )}\n      </Box>\n      <Box mt={2}>\n        <ButtonGroup>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={addDeviceIdentifier}\n          >\n            Add Device Identifiers\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DeviceIfConditionForm;\n","import React from 'react';\nimport {\n  Box,\n  TextField,\n  ButtonGroup,\n  Button,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { withSuffix, titleCase } from '../../helpers';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst KeyboardTypeConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  return (\n    <Box>\n      <Box>\n        <Autocomplete\n          options={['ansi', 'iso', 'jis']}\n          multiple\n          freeSolo\n          value={condition.keyboard_types}\n          onChange={(_e, value) => {\n            setConditionState({ ...condition, keyboard_types: value });\n          }}\n          autoHighlight={true}\n          renderInput={params => (\n            <TextField\n              {...params}\n              variant=\"filled\"\n              fullWidth\n              label=\"Keyboard Type\"\n            />\n          )}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default KeyboardTypeConditionForm;\n","import React from 'react';\nimport { Box, TextField } from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst VariableConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  return (\n    <Box>\n      <TextField\n        fullWidth\n        label=\"Variable Name\"\n        variant=\"filled\"\n        value={condition.name}\n        onChange={e => {\n          setConditionState({ ...condition, name: e.target.value });\n        }}\n      />\n      <TextField\n        fullWidth\n        label=\"Variable Value\"\n        variant=\"filled\"\n        value={condition.value}\n        onChange={e => {\n          setConditionState({ ...condition, value: e.target.value });\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default VariableConditionForm;\n","import React from 'react';\nimport { Box, TextField } from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst InputSourceConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  return <Box>Unknown</Box>;\n};\n\nexport default InputSourceConditionForm;\n","import React from 'react';\nimport {\n  Box,\n  TextField,\n  FormLabel,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@material-ui/core';\nimport ICondition from '../../types/ICondition';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\ninterface Props {\n  condition: ICondition;\n  setConditionState: (arg0: ICondition) => void;\n}\n\nconst EventChangedConditionForm: React.FC<Props> = ({\n  condition,\n  setConditionState,\n}) => {\n  return (\n    <Box mt={2}>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Value</FormLabel>\n        <RadioGroup\n          defaultValue=\"true\"\n          onChange={e => {\n            setConditionState({ ...condition, value: e.target.value });\n          }}\n        >\n          <FormControlLabel label=\"true\" value=\"true\" control={<Radio />} />\n          <FormControlLabel label=\"false\" value=\"false\" control={<Radio />} />\n        </RadioGroup>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default EventChangedConditionForm;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  ButtonGroup,\n} from '@material-ui/core';\nimport { titleCase, withSuffix } from '../../helpers';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport IManipulator from '../../types/IManipulator';\nimport FrontmostConditionForm from './FrontmostConditionForm';\nimport DeviceIfConditionForm from './DeviceIfConditionForm';\nimport KeyboardTypeConditionForm from './KeyboardTypeConditionForm';\nimport VariableConditionForm from './VariableConditionForm';\nimport InputSourceConditionForm from './InputSourceConditionForm';\nimport EventChangedConditionForm from './EventChangedConditionForm';\n\ninterface Props {\n  condition: any;\n  index: number;\n  setManipulator: (arg0: IManipulator) => void;\n  manipulator: IManipulator;\n}\nconst conditionTypes: string[] = [\n  'frontmost_application_if',\n  'frontmost_application_unless',\n  'device_if',\n  'device_unless',\n  'keyboard_type_if',\n  'keyboard_type_unless',\n  'input_source_if',\n  'input_source_unless',\n  'variable_if',\n  'variable_unless',\n  'event_changed_if',\n  'event_changed_unless',\n];\n\nconst AddConditionForm: React.FC<Props> = ({\n  condition,\n  index,\n  setManipulator,\n  manipulator,\n}) => {\n  const setConditionState = (condition: any) => {\n    const newManipulator = { ...manipulator };\n    const newConditions = [...manipulator.conditions];\n    newConditions[index] = condition;\n    newManipulator.conditions = newConditions;\n    setManipulator(newManipulator);\n  };\n\n  return (\n    <AppExpansionPanel\n      panelProps={{ defaultExpanded: index === 0 }}\n      title={`${withSuffix(index + 1)} Condition`}\n    >\n      <FormControl fullWidth variant=\"filled\">\n        <InputLabel id=\"condition_type\">Condition Type</InputLabel>\n        <Select\n          labelId=\"condition_type\"\n          value={condition.type}\n          onChange={e => {\n            setConditionState({ ...condition, type: e.target.value });\n          }}\n        >\n          {conditionTypes.map(item => (\n            <MenuItem value={item} key={item}>\n              {titleCase(item)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <TextField\n        fullWidth\n        variant=\"filled\"\n        label={`Condition Description (optional)`}\n        value={condition.description}\n        onChange={e => {\n          setConditionState({ ...condition, description: e.target.value });\n        }}\n      />\n\n      {condition.type.indexOf('frontmost') === 0 && (\n        <FrontmostConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n      {condition.type.indexOf('device') === 0 && (\n        <DeviceIfConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n      {condition.type.indexOf('keyboard') === 0 && (\n        <KeyboardTypeConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n      {condition.type.indexOf('input_source') === 0 && (\n        <InputSourceConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n      {condition.type.indexOf('variable') === 0 && (\n        <VariableConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n      {condition.type.indexOf('event_changed') === 0 && (\n        <EventChangedConditionForm\n          condition={condition}\n          setConditionState={setConditionState}\n        />\n      )}\n    </AppExpansionPanel>\n  );\n};\n\nexport default AddConditionForm;\n","export const MODIFIERS = [\n  {\n    label: 'Function key',\n    value: 'fn',\n  },\n  {\n    label: 'Left Command',\n    value: 'left_gui',\n  },\n  {\n    label: 'Right Command',\n    value: 'right_gui',\n  },\n  {\n    label: 'Left Control',\n    value: 'left_control',\n  },\n  {\n    label: 'Right Control',\n    value: 'right_control',\n  },\n  {\n    label: 'Left Alt / Option',\n    value: 'left_alt',\n  },\n  {\n    label: 'Right Alt / Option',\n    value: 'right_alt',\n  },\n  {\n    label: 'Left Shift',\n    value: 'left_shift',\n  },\n  {\n    label: 'Right Shift',\n    value: 'right_shift',\n  },\n];\nexport const KEY_CODES = [\n  {\n    label: '1',\n    value: '1',\n  },\n  {\n    label: '2',\n    value: '2',\n  },\n  {\n    label: '3',\n    value: '3',\n  },\n  {\n    label: '4',\n    value: '4',\n  },\n  {\n    label: '5',\n    value: '5',\n  },\n  {\n    label: '6',\n    value: '6',\n  },\n  {\n    label: '7',\n    value: '7',\n  },\n  {\n    label: '8',\n    value: '8',\n  },\n  {\n    label: '9',\n    value: '9',\n  },\n  {\n    label: '0',\n    value: '0',\n  },\n  {\n    label: 'A',\n    value: 'a',\n  },\n  {\n    label: 'B',\n    value: 'b',\n  },\n  {\n    label: 'C',\n    value: 'c',\n  },\n  {\n    label: 'D',\n    value: 'd',\n  },\n  {\n    label: 'E',\n    value: 'e',\n  },\n  {\n    label: 'F',\n    value: 'f',\n  },\n  {\n    label: 'G',\n    value: 'g',\n  },\n  {\n    label: 'H',\n    value: 'h',\n  },\n  {\n    label: 'I',\n    value: 'i',\n  },\n  {\n    label: 'J',\n    value: 'j',\n  },\n  {\n    label: 'K',\n    value: 'k',\n  },\n  {\n    label: 'L',\n    value: 'l',\n  },\n  {\n    label: 'M',\n    value: 'm',\n  },\n  {\n    label: 'N',\n    value: 'n',\n  },\n  {\n    label: 'O',\n    value: 'o',\n  },\n  {\n    label: 'P',\n    value: 'p',\n  },\n  {\n    label: 'Q',\n    value: 'q',\n  },\n  {\n    label: 'R',\n    value: 'r',\n  },\n  {\n    label: 'S',\n    value: 's',\n  },\n  {\n    label: 'T',\n    value: 't',\n  },\n  {\n    label: 'U',\n    value: 'u',\n  },\n  {\n    label: 'V',\n    value: 'v',\n  },\n  {\n    label: 'W',\n    value: 'w',\n  },\n  {\n    label: 'X',\n    value: 'x',\n  },\n  {\n    label: 'Y',\n    value: 'y',\n  },\n  {\n    label: 'Z',\n    value: 'z',\n  },\n  {\n    label: 'F1',\n    value: 'f1',\n  },\n  {\n    label: 'F2',\n    value: 'f2',\n  },\n  {\n    label: 'F3',\n    value: 'f3',\n  },\n  {\n    label: 'F4',\n    value: 'f4',\n  },\n  {\n    label: 'F5',\n    value: 'f5',\n  },\n  {\n    label: 'F6',\n    value: 'f6',\n  },\n  {\n    label: 'F7',\n    value: 'f7',\n  },\n  {\n    label: 'F8',\n    value: 'f8',\n  },\n  {\n    label: 'F9',\n    value: 'f9',\n  },\n  {\n    label: 'F10',\n    value: 'f10',\n  },\n  {\n    label: 'F11',\n    value: 'f11',\n  },\n  {\n    label: 'F12',\n    value: 'f12',\n  },\n  {\n    label: 'F13',\n    value: 'f13',\n  },\n  {\n    label: 'F14',\n    value: 'f14',\n  },\n  {\n    label: 'F15',\n    value: 'f15',\n  },\n  {\n    label: 'F16',\n    value: 'f16',\n  },\n  {\n    label: 'F17',\n    value: 'f17',\n  },\n  {\n    label: 'F18',\n    value: 'f18',\n  },\n  {\n    label: 'F19',\n    value: 'f19',\n  },\n  {\n    label: 'F20',\n    value: 'f20',\n  },\n  {\n    label: 'Escape',\n    value: 'escape',\n  },\n  {\n    label: '` Grave Accent, Tilde',\n    value: 'grave_accent_and_tilde',\n  },\n  {\n    label: 'Tab key',\n    value: 'tab',\n  },\n  {\n    label: 'Caps Lock',\n    value: 'caps_lock',\n  },\n  {\n    label: 'Spacebar',\n    value: 'spacebar',\n  },\n  {\n    label: 'Up Arrow',\n    value: 'up_arrow',\n  },\n  {\n    label: 'Left Arrow',\n    value: 'left_arrow',\n  },\n  {\n    label: 'Down Arrow',\n    value: 'down_arrow',\n  },\n  {\n    label: 'Right Arrow',\n    value: 'right_arrow',\n  },\n  {\n    label: 'Enter',\n    value: 'return_or_enter',\n  },\n  {\n    label: ' (Backslash)',\n    value: 'backslash',\n  },\n  {\n    label: '[ (Open Bracket)',\n    value: 'open_bracket',\n  },\n  {\n    label: '] (Close Bracket)',\n    value: 'close_bracket',\n  },\n  {\n    label: '; (Semicolon)',\n    value: 'semicolon',\n  },\n  {\n    label: \"' (Quote)\",\n    value: 'quote',\n  },\n  {\n    label: ', (Comma)',\n    value: 'comma',\n  },\n  {\n    label: '. (Period)',\n    value: 'period',\n  },\n  {\n    label: '/ (Slash)',\n    value: 'slash',\n  },\n  {\n    label: '- (Dash or Hyphen)',\n    value: 'hyphen',\n  },\n  {\n    label: '= (Equal)',\n    value: 'equal_sign',\n  },\n  {\n    label: 'Delete or Backspace',\n    value: 'delete_or_backspace',\n  },\n  {\n    label: 'Decrease Screen Brightness',\n    value: 'display_brightness_decrement',\n  },\n  {\n    label: 'Increase Screen Brightness',\n    value: 'display_brightness_increment',\n  },\n  {\n    label: 'Mission Control',\n    value: 'mission_control',\n  },\n  {\n    label: 'Launchpad',\n    value: 'launchpad',\n  },\n  {\n    label: 'Keyboard Brightness Decrease',\n    value: 'illumination_decrement',\n  },\n  {\n    label: 'Keyboard Brightness Increase',\n    value: 'illumination_increment',\n  },\n  {\n    label: 'Rewind / Previous',\n    value: 'rewind',\n  },\n  {\n    label: 'Play or Pause',\n    value: 'play_or_pause',\n  },\n  {\n    label: 'Fastforward / Next',\n    value: 'fastforward',\n  },\n  {\n    label: 'Mute',\n    value: 'mute',\n  },\n  {\n    label: 'Volume Down',\n    value: 'volume_decrement',\n  },\n  {\n    label: 'Volume Up',\n    value: 'volume_increment',\n  },\n  {\n    label: 'Keypad 0',\n    value: 'keypad_0',\n  },\n  {\n    label: 'Keypad 1',\n    value: 'keypad_1',\n  },\n  {\n    label: 'Keypad 2',\n    value: 'keypad_2',\n  },\n  {\n    label: 'Keypad 3',\n    value: 'keypad_3',\n  },\n  {\n    label: 'Keypad 4',\n    value: 'keypad_4',\n  },\n  {\n    label: 'Keypad 5',\n    value: 'keypad_5',\n  },\n  {\n    label: 'Keypad 6',\n    value: 'keypad_6',\n  },\n  {\n    label: 'Keypad 7',\n    value: 'keypad_7',\n  },\n  {\n    label: 'Keypad 8',\n    value: 'keypad_8',\n  },\n  {\n    label: 'Keypad 9',\n    value: 'keypad_9',\n  },\n];\n\nexport const ALL_KEYS = [...MODIFIERS, ...KEY_CODES];\n","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { MODIFIERS, KEY_CODES } from '../../constants';\nimport { TextField } from '@material-ui/core';\nimport Modifier from '../../types/Modifier';\n\ninterface Props {\n  // value: Modifier[];\n  value: any;\n  onChange: (e: any, value: any) => void;\n  modifiers?: boolean;\n  keyCodes?: boolean;\n  multiple?: any;\n  autoHighlight?: boolean;\n  freeSolo?: boolean;\n  label?: string;\n}\n\nconst KeyInput: React.FC<Props> = ({\n  value = [],\n  onChange = e => {},\n  modifiers = false,\n  keyCodes = false,\n  multiple = true,\n  autoHighlight = false,\n  freeSolo = true,\n  label = 'keys',\n}) => {\n  let options: Modifier[] = [];\n  let placeholderText: string[] = [];\n  if (keyCodes) {\n    options = [...options, ...KEY_CODES];\n    placeholderText.push('Key Codes');\n  }\n  if (modifiers) {\n    options = [...options, ...MODIFIERS];\n    placeholderText.push('Modifiers');\n  }\n  return (\n    <Autocomplete\n      multiple={multiple}\n      freeSolo={freeSolo}\n      options={options}\n      getOptionLabel={(o: any) => (typeof o === 'object' ? o.label : o) || ''}\n      value={typeof value === 'string' ? [value] : value}\n      onChange={onChange}\n      autoHighlight={autoHighlight}\n      renderInput={params => (\n        <TextField\n          {...params}\n          variant=\"filled\"\n          label={label}\n          placeholder={placeholderText.join(', ')}\n          fullWidth\n        />\n      )}\n    />\n  );\n};\n\nexport default KeyInput;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  ButtonGroup,\n  Button,\n  Typography,\n  FormControl,\n  Box,\n} from '@material-ui/core';\nimport KeyInput from './KeyInput';\nconst pointingButtons: any[] = [\n  {\n    label: 'None',\n    value: '',\n  },\n  {\n    label: 'Left Click',\n    value: 'button1',\n  },\n  {\n    label: 'Right Click',\n    value: 'button2',\n  },\n  {\n    label: 'Middle Click',\n    value: 'button3',\n  },\n  {\n    label: 'Mouse 4',\n    value: 'button4',\n  },\n  {\n    label: 'Mouse 5',\n    value: 'button5',\n  },\n];\n\ninterface Props {\n  eventObject: any;\n  setEventObject: (obj: any) => void;\n}\n\nconst KeyCodeAndPointingButtonInput: React.FC<Props> = ({\n  eventObject = {},\n  setEventObject = obj => {},\n}) => {\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n  });\n\n  useEffect(() => {\n    const newOptional = {\n      keyCode: !!eventObject.key_code,\n      consumerKeyCode: !!eventObject.consumer_key_code,\n    };\n    console.log(eventObject.key_code);\n    setShowOptional(newOptional);\n  }, [eventObject.consumer_key_code, eventObject.key_code]);\n\n  return useMemo(\n    () => (\n      <Box marginBottom={2}>\n        <ButtonGroup>\n          <Button\n            disabled={showOptional.keyCode}\n            variant=\"contained\"\n            onClick={() => {\n              setShowOptional({\n                ...showOptional,\n                keyCode: true,\n                consumerKeyCode: false,\n              });\n            }}\n          >\n            Key Code\n          </Button>\n          <Button\n            disabled={showOptional.consumerKeyCode}\n            variant=\"contained\"\n            onClick={() => {\n              setShowOptional({\n                ...showOptional,\n                keyCode: false,\n                consumerKeyCode: true,\n              });\n            }}\n          >\n            Consumer Key Code\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setShowOptional({\n                ...showOptional,\n                keyCode: false,\n                consumerKeyCode: false,\n              });\n            }}\n            disabled={!(showOptional.keyCode || showOptional.consumerKeyCode)}\n            color=\"secondary\"\n          >\n            Disable\n          </Button>\n        </ButtonGroup>\n        <Box marginBottom={1}>\n          {showOptional.keyCode && (\n            <Box marginTop={2} marginBottom={3}>\n              <KeyInput\n                keyCodes\n                modifiers\n                multiple={false}\n                value={eventObject.key_code}\n                autoHighlight={false}\n                label=\"Key Code (optional)\"\n                onChange={(_e: any, v: any) => {\n                  setEventObject({\n                    ...eventObject,\n                    key_code:\n                      typeof v === 'string' ? { label: v, value: v } : v,\n                  });\n                }}\n              />\n            </Box>\n          )}\n          {showOptional.consumerKeyCode && (\n            <TextField\n              placeholder=\"\"\n              margin=\"normal\"\n              variant=\"filled\"\n              label=\"Consumer Key Code (optional)\"\n              fullWidth\n              value={eventObject.consumer_key_code || ''}\n              onChange={e => {\n                setEventObject({\n                  ...eventObject,\n                  consumer_key_code: e.currentTarget.value,\n                });\n              }}\n            />\n          )}\n        </Box>\n\n        <Box mt={2} mb={3}>\n          <FormControl variant=\"filled\" fullWidth>\n            <InputLabel id=\"type\">Pointing Button (optional)</InputLabel>\n            <Select\n              labelId=\"type\"\n              value={eventObject.pointing_button || ''}\n              onChange={(event: any) => {\n                setEventObject({\n                  ...eventObject,\n                  pointing_button: event.target.value || '',\n                });\n              }}\n            >\n              {pointingButtons.map(({ label, value }) => (\n                <MenuItem value={value} key={value}>\n                  {label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n    ),\n    [showOptional, eventObject],\n  );\n};\n\nexport default KeyCodeAndPointingButtonInput;\n","import IRule from '../types/IRule';\nimport IManipulator from '../types/IManipulator';\nimport _ from 'lodash';\nimport IFormState from '../types/IFormState';\nimport produce from 'immer';\nimport IFromEventDefinition from '../types/IFromEventDefinition';\nimport IToEventDefinition from '../types/IToEventDefinition';\n\nexport const initialManipulator: IManipulator = {\n  type: 'basic',\n  from: {\n    modifiers: {\n      mandatory: [],\n      optional: [],\n    },\n    simultaneous: [],\n    simultaneous_options: {\n      detect_key_down_uninterruptedly: false,\n      to_after_key_up: [],\n    },\n  },\n  conditions: [],\n  to: [],\n  to_after_key_up: [],\n  to_if_alone: [],\n  to_if_held_down: [],\n  to_delayed_action: {\n    to_if_invoked: [],\n    to_if_canceled: [],\n  },\n};\n\nconst getInitialRule = (): IRule => {\n  return {\n    description: '',\n    manipulators: [initialManipulator],\n  };\n};\nconst initialFormState: IFormState = {\n  title: '',\n  rules: [getInitialRule()],\n};\n\nconst SET_TITLE = 'SET_TITLE';\nconst ADD_RULE = 'ADD_RULE';\nconst REMOVE_RULE = 'REMOVE_RULE';\nconst SET_RULE = 'SET_RULE';\nconst ADD_MANIPULATOR = 'ADD_MANIPULATOR';\nconst SET_MANIPULATOR = 'SET_MANIPULATOR';\nconst SET_FROM_OBJECT = 'SET_FROM_OBJECT';\nconst ADD_TO_OBJECT = 'ADD_TO_OBJECT';\nconst SET_TO_OBJECT = 'SET_TO_OBJECT';\nconst SET_WHOLE_STATE = 'SET_WHOLE_STATE';\n\nexport const formStateReducer = (state = initialFormState, action: any) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case SET_WHOLE_STATE:\n        draft.title = action.payload.state.title;\n        draft.rules = action.payload.state.rules;\n        break;\n      case REMOVE_RULE:\n        draft.rules.splice(action.payload.index, 1);\n        break;\n      case SET_TITLE:\n        draft.title = action.payload.title;\n        break;\n\n      case ADD_RULE:\n        draft.rules.push(getInitialRule());\n        break;\n      case SET_RULE:\n        if (action.payload) {\n          const { rule, index } = action.payload;\n          draft.rules[index] = rule;\n        }\n        break;\n      case ADD_MANIPULATOR:\n        if (action.payload) {\n          const { ruleIndex } = action.payload;\n          draft.rules[ruleIndex].manipulators.push(initialManipulator);\n        }\n        break;\n      case SET_MANIPULATOR:\n        if (action.payload) {\n          const { ruleIndex, index, manipulator } = action.payload;\n          draft.rules[ruleIndex].manipulators[index] = manipulator;\n        }\n        break;\n      case SET_FROM_OBJECT:\n        if (action.payload) {\n          const { ruleIndex, manipulatorIndex, fromObject } = action.payload;\n          draft.rules[ruleIndex].manipulators[\n            manipulatorIndex\n          ].from = fromObject;\n        }\n        break;\n      case ADD_TO_OBJECT:\n        if (action.payload) {\n          const { toField, ruleIndex, manipulatorIndex } = action.payload;\n          const initToObj = {\n            repeat: true,\n          };\n          const manip = draft.rules[ruleIndex].manipulators[manipulatorIndex];\n          if (toField === 'to_if_canceled' || toField === 'to_if_invoked') {\n            if (toField === 'to_if_canceled') {\n              manip.to_delayed_action.to_if_canceled.push(initToObj);\n            } else {\n              manip.to_delayed_action.to_if_invoked.push(initToObj);\n            }\n          } else {\n            manip[toField].push(initToObj);\n          }\n        }\n        break;\n      case SET_TO_OBJECT:\n        if (action.payload) {\n          const {\n            toField,\n            ruleIndex,\n            manipulatorIndex,\n            toIndex,\n            toObject,\n          } = action.payload;\n\n          // TODO: wtf is this can i fix this someday pls\n          draft.rules[ruleIndex].manipulators[manipulatorIndex][toField][\n            toIndex\n          ] = toObject;\n        }\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport const setWholeState = (state: any) => {\n  return {\n    type: SET_WHOLE_STATE,\n    payload: { state },\n  };\n};\n\nexport const setTitle = (title: string) => {\n  return {\n    type: SET_TITLE,\n    payload: {\n      title,\n    },\n  };\n};\n\nexport const addRule = () => {\n  return {\n    type: ADD_RULE,\n  };\n};\n\nexport const removeRule = (index?: number) => {\n  return {\n    type: REMOVE_RULE,\n    payload: {\n      index,\n    },\n  };\n};\n\nexport const setRule = (index: number, rule: IRule) => {\n  return {\n    type: SET_RULE,\n    payload: {\n      index,\n      rule,\n    },\n  };\n};\n\nexport const addManipulator = (ruleIndex: number) => {\n  return {\n    type: ADD_MANIPULATOR,\n    payload: {\n      ruleIndex,\n    },\n  };\n};\n\nexport const setManipulator = ({\n  ruleIndex,\n  index,\n  manipulator,\n}: {\n  ruleIndex: number;\n  index: number;\n  manipulator: IManipulator;\n}) => {\n  return {\n    type: SET_MANIPULATOR,\n    payload: {\n      ruleIndex,\n      index,\n      manipulator,\n    },\n  };\n};\n\nexport const setFromObject = ({\n  ruleIndex,\n  manipulatorIndex,\n  fromObject,\n}: {\n  ruleIndex: number;\n  manipulatorIndex: number;\n  fromObject: IFromEventDefinition;\n}) => {\n  return {\n    type: SET_FROM_OBJECT,\n    payload: {\n      ruleIndex,\n      manipulatorIndex,\n      fromObject,\n    },\n  };\n};\n\nexport const addToObject = ({\n  ruleIndex,\n  manipulatorIndex,\n  toField,\n}: {\n  ruleIndex: number;\n  manipulatorIndex: number;\n  toField: string;\n}) => {\n  return {\n    type: ADD_TO_OBJECT,\n    payload: {\n      ruleIndex,\n      manipulatorIndex,\n      toField,\n    },\n  };\n};\n\nexport const setToObject = ({\n  ruleIndex,\n  manipulatorIndex,\n  toField,\n  toIndex,\n  toObject,\n}: {\n  ruleIndex: number;\n  manipulatorIndex: number;\n  toField: string;\n  toIndex: number;\n  toObject: IToEventDefinition;\n}) => {\n  return {\n    type: SET_TO_OBJECT,\n    payload: {\n      ruleIndex,\n      manipulatorIndex,\n      toField,\n      toIndex,\n      toObject,\n    },\n  };\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\nimport IToEventDefinition from '../../types/IToEventDefinition';\nimport Modifier from '../../types/Modifier';\nimport {\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  Box,\n} from '@material-ui/core';\nimport KeyInput from '../shared/KeyInput';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IManipulator from '../../types/IManipulator';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { suffix, titleCase } from '../../helpers';\n\ninterface Props {\n  toObject: IToEventDefinition;\n  setToObject: (arg0: IToEventDefinition) => void;\n  removeToObject: () => void;\n  index: number;\n  toField: string;\n}\n\nconst ToEventForm: React.FC<Props> = ({\n  toObject,\n  setToObject,\n  removeToObject,\n  index,\n  toField,\n}) => {\n  const [showOptional, setShowOptional] = useState({\n    keyCode: false,\n    consumerKeyCode: false,\n    pointingButton: false,\n    simultaneous: false,\n    simultaneousOptions: false,\n  });\n\n  useEffect(() => {\n    const newToObject: any = { ...toObject };\n    if (newToObject.pointing_button === 'disabled') {\n      delete newToObject.pointing_button;\n    }\n    if (!showOptional.keyCode && !!newToObject.key_code) {\n      delete newToObject.key_code;\n    } else {\n      newToObject.key_code = newToObject.key_code?.value;\n    }\n    if (!showOptional.consumerKeyCode && !!newToObject.consumer_key_code) {\n      delete newToObject.consumer_key_code;\n    }\n    if (!newToObject.modifiers?.length) {\n      delete newToObject.modifiers;\n    } else {\n      if (typeof newToObject.modifiers === 'string') {\n        newToObject.modifiers = [newToObject.modifiers];\n      }\n      newToObject.modifiers = newToObject.modifiers.map(\n        (m: Modifier) => m.value,\n      );\n    }\n    if (newToObject.lazy === false) {\n      delete newToObject.lazy;\n    }\n    if (newToObject.repeat === true) {\n      delete newToObject.repeat;\n    }\n    if (newToObject.halt === false) {\n      delete newToObject.halt;\n    }\n    // const toArray = [...ruleState[type]];\n    // toArray[index] = { ...newToObject };\n\n    // setRuleState({\n    //   ...ruleState,\n    //   [type]: toArray,\n    // });\n  }, [toObject, showOptional]);\n  return (\n    <AppExpansionPanel\n      title={`${index + 1}${suffix(index + 1)} \"${titleCase(toField)}\" Event`}\n    >\n      <Box className=\"form-container\">\n        <KeyCodeAndPointingButtonInput\n          setEventObject={setToObject}\n          eventObject={toObject}\n        />\n        <KeyInput\n          freeSolo={false}\n          modifiers\n          value={toObject.modifiers}\n          label=\"Modifiers\"\n          onChange={(_e: any, value: any) => {\n            setToObject({\n              ...toObject,\n              modifiers: value.map((v: any) =>\n                typeof v === 'string' ? { label: v, value: v } : v,\n              ),\n            });\n          }}\n        />\n        <FormControl fullWidth>\n          <FormLabel>Additional Options</FormLabel>\n          <FormControlLabel\n            label=\"Lazy\"\n            control={\n              <Checkbox\n                checked={!!toObject.lazy}\n                onChange={e => {\n                  setToObject({ ...toObject, lazy: e.target.checked });\n                }}\n              />\n            }\n          />\n          <FormControlLabel\n            label=\"Repeat\"\n            control={\n              <Checkbox\n                checked={!!toObject.repeat}\n                onChange={e => {\n                  setToObject({ ...toObject, repeat: e.target.checked });\n                }}\n              />\n            }\n          />\n          <FormControlLabel\n            label=\"Halt\"\n            control={\n              <Checkbox\n                checked={!!toObject.halt}\n                onChange={e => {\n                  setToObject({ ...toObject, halt: e.target.checked });\n                }}\n              />\n            }\n          />\n        </FormControl>\n\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => removeToObject()}\n          startIcon={<DeleteIcon />}\n        >\n          Remove\n        </Button>\n      </Box>\n    </AppExpansionPanel>\n  );\n};\n\nexport default ToEventForm;\n","import React, { useMemo } from 'react';\nimport {\n  Box,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\n\nimport IFromEventDefinition from '../../types/IFromEventDefinition';\nimport KeyInput from '../shared/KeyInput';\nimport KeyCodeAndPointingButtonInput from '../shared/KeyCodeAndPointingButtonInput';\nimport _ from 'lodash';\nimport { titleCase, withSuffix } from '../../helpers';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { useDispatch } from 'react-redux';\nimport { setFromObject } from '../../ducks/formState';\nimport ISimultaneous from '../../types/ISimultaneous';\nimport ToEventForm from './ToEventForm';\nimport IToEventDefinition from '../../types/IToEventDefinition';\n\nconst optionalBoolean: string[] = ['none', 'true', 'false'];\nconst keyOrder: string[] = ['none', 'insensitive', 'strict', 'strict_inverse'];\nconst keyUpWhen: string[] = ['none', 'any', 'all'];\n\ninterface Props {\n  fromObject: IFromEventDefinition;\n  ruleIndex: number;\n  manipulatorIndex: number;\n}\n\nconst FromEventForm: React.FC<Props> = ({\n  fromObject,\n  ruleIndex,\n  manipulatorIndex,\n}) => {\n  const dispatch = useDispatch();\n  const _setFromObject = (fromObject: IFromEventDefinition) => {\n    dispatch(setFromObject({ ruleIndex, manipulatorIndex, fromObject }));\n  };\n  const handleModifierChange = (event: any, value: any, type: string) => {\n    _setFromObject({\n      ...fromObject,\n      modifiers: {\n        ...fromObject.modifiers,\n        [type]: value.map((v: any) =>\n          typeof v === 'string' ? { label: v, value: v } : v,\n        ),\n      },\n    });\n  };\n\n  const addSimultaneous = () => {\n    const newFromObject = { ...fromObject };\n    newFromObject.simultaneous = newFromObject.simultaneous || [];\n    newFromObject.simultaneous = [...newFromObject.simultaneous, {}];\n    _setFromObject(newFromObject);\n  };\n\n  return useMemo(\n    () => (\n      <Box className=\"form-container\">\n        <KeyCodeAndPointingButtonInput\n          setEventObject={_setFromObject}\n          eventObject={fromObject}\n        />\n        <div>\n          <div>\n            <KeyInput\n              modifiers\n              value={fromObject.modifiers?.mandatory || []}\n              label=\"Mandatory Modifiers (optional)\"\n              onChange={(event: any, value: any) =>\n                handleModifierChange(event, value, 'mandatory')\n              }\n            />\n          </div>\n          <div>\n            <KeyInput\n              modifiers\n              keyCodes\n              value={fromObject.modifiers?.optional || []}\n              label=\"Optional Modifiers (optional)\"\n              onChange={(event: any, value: any) =>\n                handleModifierChange(event, value, 'optional')\n              }\n            />\n          </div>\n        </div>\n        <Box>\n          {fromObject.simultaneous?.map((simultaneous: any, index: number) => {\n            const setSimultaneous = (newSimultaneousObject: any) => {\n              const newFromObject = { ...fromObject };\n              if (newFromObject?.simultaneous?.length) {\n                const newSim = [...newFromObject.simultaneous];\n                newSim[index] = newSimultaneousObject;\n                newFromObject.simultaneous = newSim;\n                _setFromObject(newFromObject);\n              }\n            };\n            return (\n              <AppExpansionPanel\n                key={index}\n                panelProps={{ defaultExpanded: index === 0 }}\n                title={`${withSuffix(index + 1)} Simultaneous Event`}\n              >\n                <KeyCodeAndPointingButtonInput\n                  eventObject={simultaneous}\n                  setEventObject={setSimultaneous}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    const newFromObject = { ...fromObject };\n                    if (newFromObject?.simultaneous?.length) {\n                      const simultaneous = [...newFromObject.simultaneous];\n                      simultaneous.splice(index, 1);\n                      newFromObject.simultaneous = simultaneous;\n                      _setFromObject(newFromObject);\n                    }\n                  }}\n                >\n                  Remove Simultaneous\n                </Button>\n              </AppExpansionPanel>\n            );\n          })}\n          <Box mt={1} mb={1}>\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              fullWidth\n              onClick={() => addSimultaneous()}\n            >\n              Add Simultaneous Event\n            </Button>\n          </Box>\n        </Box>\n        <Box>\n          <AppExpansionPanel title=\"Simultaneous Options\">\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={\n                    !!fromObject?.simultaneous_options\n                      ?.detect_key_down_uninterruptedly\n                  }\n                  onChange={e => {\n                    _setFromObject({\n                      ...fromObject,\n                      simultaneous_options: {\n                        ...fromObject.simultaneous_options,\n                        detect_key_down_uninterruptedly: e.target.checked,\n                      },\n                    });\n                  }}\n                />\n              }\n              label=\"Detect Key Down Uninterruptedly\"\n            />\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_down_order\">Key Down Order</InputLabel>\n              <Select\n                labelId=\"key_down_order\"\n                value={fromObject.simultaneous_options?.key_down_order}\n                onChange={e => {\n                  _setFromObject({\n                    ...fromObject,\n                    simultaneous_options: {\n                      ...fromObject.simultaneous_options,\n                      key_down_order: e.target.value,\n                    },\n                  });\n                }}\n              >\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_up_order\">Key Up Order</InputLabel>\n              <Select\n                labelId=\"key_up_order\"\n                value={fromObject.simultaneous_options?.key_up_order}\n                onChange={e => {\n                  _setFromObject({\n                    ...fromObject,\n                    simultaneous_options: {\n                      ...fromObject.simultaneous_options,\n                      key_up_order: e.target.value,\n                    },\n                  });\n                }}\n              >\n                {keyOrder.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth variant=\"filled\">\n              <InputLabel id=\"key_up_when\">Key Up When</InputLabel>\n              <Select\n                labelId=\"key_up_when\"\n                value={fromObject.simultaneous_options?.key_up_when}\n                onChange={e => {\n                  _setFromObject({\n                    ...fromObject,\n                    simultaneous_options: {\n                      ...fromObject.simultaneous_options,\n                      key_up_when: e.target.value,\n                    },\n                  });\n                }}\n              >\n                {keyUpWhen.map(item => (\n                  <MenuItem value={item} key={item}>\n                    {titleCase(item)}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <Box mt={1}>\n              {fromObject.simultaneous_options?.to_after_key_up?.map(\n                (toEvent: IToEventDefinition, index: number) => {\n                  return (\n                    <ToEventForm\n                      toObject={toEvent}\n                      setToObject={(toObject: IToEventDefinition) => {\n                        const newFromObject = { ...fromObject };\n                        const currentToField = [\n                          ...newFromObject.simultaneous_options.to_after_key_up,\n                        ];\n                        currentToField[index] = toObject;\n                        newFromObject.simultaneous_options = {\n                          to_after_key_up: currentToField,\n                        };\n                        _setFromObject(newFromObject);\n                      }}\n                      removeToObject={() => {}}\n                      index={index}\n                      toField=\"to_after_key_up\"\n                      key={index}\n                    />\n                  );\n                },\n              )}\n              <Button\n                color=\"default\"\n                variant=\"contained\"\n                fullWidth\n                onClick={() => {\n                  const newFromObject: IFromEventDefinition = { ...fromObject };\n                  const simOpts: any = {\n                    ...newFromObject.simultaneous_options,\n                  };\n                  const toAfterKeyUp = simOpts.to_after_key_up\n                    ? [...simOpts.to_after_key_up]\n                    : [];\n                  toAfterKeyUp.push({});\n                  simOpts.to_after_key_up = toAfterKeyUp;\n                  newFromObject.simultaneous_options = simOpts;\n                  _setFromObject(newFromObject);\n                }}\n              >\n                Add to_after_key_up event\n              </Button>\n            </Box>\n          </AppExpansionPanel>\n        </Box>\n      </Box>\n    ),\n    [fromObject],\n  );\n};\n\nexport default FromEventForm;\n","import React from 'react';\nimport { Box, Button, ButtonGroup } from '@material-ui/core';\n\nimport { titleCase, suffix } from '../../helpers';\nimport ToEventForm from './ToEventForm';\nimport IManipulator from '../../types/IManipulator';\nimport IToEventDefinition from '../../types/IToEventDefinition';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { useDispatch } from 'react-redux';\nimport { setManipulator, addToObject } from '../../ducks/formState';\n\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\n\nconst toDelayedAction: string[] = ['to_if_invoked', 'to_if_canceled'];\n\ninterface Props {\n  manipulator: IManipulator;\n  manipulatorIndex: number;\n  ruleIndex: number;\n}\n\nconst TheForm = ({\n  to,\n  index,\n  toField,\n  manipulator,\n  ruleIndex,\n  manipulatorIndex,\n}: {\n  to: IToEventDefinition;\n  index: number;\n  toField: string;\n  manipulator: IManipulator;\n  ruleIndex: number;\n  manipulatorIndex: number;\n}) => {\n  const toObject = { ...to };\n  const dispatch = useDispatch();\n\n  const _setManipulator = (newManipulator: IManipulator) =>\n    dispatch(\n      setManipulator({\n        manipulator: newManipulator,\n        ruleIndex,\n        index: manipulatorIndex,\n      }),\n    );\n  const setToObject = (newToObject: IToEventDefinition) => {\n    const newManipulator = { ...manipulator };\n    if (toDelayedAction.includes(toField)) {\n      const _toDelayedAction = { ...newManipulator.to_delayed_action };\n      _toDelayedAction[toField] = [..._toDelayedAction[toField]];\n      _toDelayedAction[toField][index] = newToObject;\n      newManipulator.to_delayed_action = _toDelayedAction;\n    } else {\n      const _toField = [...newManipulator[toField]];\n      _toField[index] = newToObject;\n      newManipulator[toField] = _toField;\n    }\n    _setManipulator(newManipulator);\n  };\n  const removeToObject = () => {\n    const newManipulator = { ...manipulator };\n    if (toDelayedAction.includes(toField)) {\n      const _toDelayedAction = { ...newManipulator.to_delayed_action };\n      _toDelayedAction[toField] = [..._toDelayedAction[toField]];\n      _toDelayedAction[toField].splice(index, 1);\n      newManipulator.to_delayed_action = _toDelayedAction;\n    } else {\n      const _toField = [...newManipulator[toField]];\n      _toField.splice(index, 1);\n      newManipulator[toField] = _toField;\n    }\n    _setManipulator(newManipulator);\n  };\n\n  const toEventFormProps = {\n    toObject,\n    setToObject,\n    removeToObject,\n    index,\n    toField,\n  };\n  return <ToEventForm {...toEventFormProps} key={index} />;\n};\nconst ToEventFormsContainer: React.FC<Props> = ({\n  manipulator,\n  ruleIndex,\n  manipulatorIndex,\n}) => {\n  const dispatch = useDispatch();\n  const addToEventForm = (toField: string) => {\n    dispatch(addToObject({ manipulatorIndex, ruleIndex, toField }));\n  };\n  const totalDelayedAction =\n    (manipulator?.to_delayed_action?.to_if_canceled?.length || 0) +\n    (manipulator?.to_delayed_action?.to_if_invoked?.length || 0);\n  return (\n    <Box>\n      {toFields.map((toField: string, toFieldsIndex: number) => {\n        return (\n          <Box mb={2} key={toField}>\n            {manipulator[toField]?.length ? (\n              <AppExpansionPanel\n                key={toFieldsIndex}\n                title={`${manipulator[toField].length} \"${titleCase(\n                  toField,\n                )}\" Events`}\n              >\n                {manipulator[toField].map(\n                  (to: IToEventDefinition, index: number) => {\n                    return (\n                      <TheForm\n                        to={to}\n                        index={index}\n                        toField={toField}\n                        key={index}\n                        ruleIndex={ruleIndex}\n                        manipulatorIndex={manipulatorIndex}\n                        manipulator={manipulator}\n                      />\n                    );\n                  },\n                )}\n                <Box mt={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      addToEventForm(toField);\n                    }}\n                    fullWidth\n                  >\n                    add {toField} event\n                  </Button>\n                </Box>\n              </AppExpansionPanel>\n            ) : (\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    addToEventForm(toField);\n                  }}\n                  fullWidth\n                >\n                  add {toField} event\n                </Button>\n              </Box>\n            )}\n          </Box>\n        );\n      })}\n\n      <AppExpansionPanel\n        title={`${totalDelayedAction} \"To Delayed Action\" Events`}\n      >\n        {toDelayedAction.map((toField: string) => {\n          return (\n            <Box key={toField}>\n              {manipulator?.to_delayed_action?.[toField]?.length ? (\n                <AppExpansionPanel\n                  key={toField}\n                  title={`${\n                    manipulator.to_delayed_action[toField].length\n                  } \"${titleCase(toField)}\" Events`}\n                >\n                  {manipulator.to_delayed_action[toField].map(\n                    (to: IToEventDefinition, index: number) => {\n                      return (\n                        <TheForm\n                          to={to}\n                          index={index}\n                          toField={toField}\n                          key={index}\n                          ruleIndex={ruleIndex}\n                          manipulatorIndex={manipulatorIndex}\n                          manipulator={manipulator}\n                        />\n                      );\n                    },\n                  )}\n                  <Box mt={2}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={() => {\n                        addToEventForm(toField);\n                      }}\n                    >\n                      Add {toField} Event\n                    </Button>\n                  </Box>\n                </AppExpansionPanel>\n              ) : (\n                <Box mb={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    onClick={() => {\n                      addToEventForm(toField);\n                    }}\n                  >\n                    Add {toField} Event\n                  </Button>\n                </Box>\n              )}\n            </Box>\n          );\n        })}\n      </AppExpansionPanel>\n    </Box>\n  );\n};\n\nexport default ToEventFormsContainer;\n","import React, { useMemo } from 'react';\nimport { Select, FormControl, InputLabel, MenuItem } from '@material-ui/core';\nimport { titleCase } from '../../helpers';\n\ninterface Props {\n  label: string;\n  value: string;\n  options: any[];\n  onChange: any; //TODO: event function\n}\n\nconst AppSelect: React.FC<Props> = ({\n  label,\n  value,\n  options,\n  onChange = () => {},\n}) => {\n  return useMemo(\n    () => (\n      <FormControl variant=\"filled\" fullWidth>\n        <InputLabel id=\"type\">{label}</InputLabel>\n        <Select labelId=\"type\" value={value} onChange={onChange}>\n          {options.map(option => (\n            <MenuItem value={option} key={option}>\n              {titleCase(option)}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    ),\n    [label, value, options],\n  );\n};\n\nexport default AppSelect;\n","import React, { useMemo } from 'react';\nimport {\n  Select,\n  Box,\n  ButtonGroup,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Button,\n  Typography,\n} from '@material-ui/core';\n\nimport { titleCase, withSuffix } from '../../helpers';\nimport AddConditionForm from './AddConditionForm';\nimport IManipulator from '../../types/IManipulator';\nimport ICondition from '../../types/ICondition';\nimport FromEventForm from './FromEventForm';\nimport IFromEventDefinition from '../../types/IFromEventDefinition';\nimport ToEventFormsContainer from './ToEventFormsContainer';\nimport _ from 'lodash';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport AppSelect from '../shared/AppSelect';\nimport { useDispatch } from 'react-redux';\nimport { setManipulator, addToObject } from '../../ducks/formState';\n\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\nconst types: string[] = [\n  'basic',\n  'frontmost_application_if',\n  'frontmost_application_unless',\n  'device_if',\n  'device_unless',\n  'keyboard_type_if',\n  'keyboard_type_unless',\n  'input_source_if',\n  'input_source_unless',\n  'variable_if',\n  'variable_unless',\n  'event_changed_if',\n  'event_changed_unless',\n];\n\ninterface Props {\n  manipulator: IManipulator;\n  index: number;\n  ruleIndex: number;\n}\n\nconst ManipulatorForm: React.FC<Props> = ({\n  manipulator,\n  ruleIndex,\n  index,\n}) => {\n  const dispatch = useDispatch();\n  const addToEventForm = (toField: string) => {\n    dispatch(addToObject({ manipulatorIndex: index, ruleIndex, toField }));\n  };\n\n  const _setManipulator = (newManipulator: IManipulator) => {\n    dispatch(\n      setManipulator({\n        ruleIndex,\n        index,\n        manipulator: newManipulator,\n      }),\n    );\n  };\n\n  const addConditionToRule = () => {\n    const newManipulator = { ...manipulator };\n    newManipulator.conditions = newManipulator.conditions || [];\n    const newConditions = [...newManipulator.conditions];\n    newConditions.push({ type: 'frontmost_application_if' });\n    newManipulator.conditions = newConditions;\n    _setManipulator(newManipulator);\n  };\n\n  return useMemo(\n    () => (\n      <AppExpansionPanel\n        panelProps={{ defaultExpanded: true }}\n        title={`${withSuffix(index + 1)} Manipulator`}\n      >\n        <AppSelect\n          label=\"Type\"\n          value={manipulator.type}\n          options={types}\n          onChange={(e: any) => {\n            dispatch(\n              setManipulator({\n                manipulator: { ...manipulator, type: e.target.value },\n                index,\n                ruleIndex,\n              }),\n            );\n          }}\n        />\n        <AppExpansionPanel\n          panelProps={{ defaultExpanded: true }}\n          title={`\"From\" Event`}\n        >\n          <FromEventForm\n            fromObject={manipulator.from}\n            manipulatorIndex={index}\n            ruleIndex={ruleIndex}\n          />\n        </AppExpansionPanel>\n\n        <ToEventFormsContainer\n          manipulator={manipulator}\n          ruleIndex={ruleIndex}\n          manipulatorIndex={index}\n        />\n\n        {!!manipulator.conditions?.length && (\n          <AppExpansionPanel\n            panelProps={{ defaultExpanded: true }}\n            title=\"Rule Conditions\"\n          >\n            {manipulator.conditions.map(\n              (condition: ICondition, index: number) => {\n                return (\n                  <AddConditionForm\n                    key={index}\n                    index={index}\n                    condition={condition}\n                    setManipulator={_setManipulator}\n                    manipulator={manipulator}\n                  />\n                );\n              },\n            )}\n          </AppExpansionPanel>\n        )}\n\n        <Box marginTop={1}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              addConditionToRule();\n            }}\n          >\n            Add Condition\n          </Button>\n        </Box>\n      </AppExpansionPanel>\n    ),\n    [manipulator],\n  );\n};\n\nexport default ManipulatorForm;\n","import React, { useMemo } from 'react';\nimport { Typography, Box, TextField, Button } from '@material-ui/core';\n\nimport ManipulatorForm from './ManipulatorForm';\nimport IManipulator from '../../types/IManipulator';\nimport IRule from '../../types/IRule';\nimport _ from 'lodash';\nimport { withSuffix } from '../../helpers';\nimport AppExpansionPanel from '../shared/AppExpansionPanel';\nimport { useDispatch } from 'react-redux';\nimport { removeRule, setRule, addManipulator } from '../../ducks/formState';\n\ninterface Props {\n  rule: IRule;\n  index: number;\n}\n\nconst RuleForm: React.FC<Props> = ({ rule, index }) => {\n  const dispatch = useDispatch();\n  return useMemo(\n    () => (\n      <AppExpansionPanel\n        title={\n          <TextField\n            label={`${withSuffix(index + 1)} Rule Description`}\n            value={rule.description}\n            onClick={event => event.stopPropagation()}\n            onFocus={event => event.stopPropagation()}\n            onChange={e =>\n              dispatch(setRule(index, { ...rule, description: e.target.value }))\n            }\n            multiline\n            fullWidth\n          />\n        }\n        panelProps={{ defaultExpanded: index === 0 }}\n      >\n        <Box justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={() => dispatch(removeRule(index))}\n          >\n            Delete Rule!\n          </Button>\n        </Box>\n        <Box mt={2}>\n          {rule.manipulators.map(\n            (manipulator: IManipulator, manipulatorIndex: number) => {\n              return (\n                <ManipulatorForm\n                  manipulator={manipulator}\n                  key={manipulatorIndex}\n                  index={manipulatorIndex}\n                  ruleIndex={index}\n                />\n              );\n            },\n          )}\n        </Box>\n\n        <Box mt={2}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => dispatch(addManipulator(index))}\n          >\n            Add Manipulator\n          </Button>\n        </Box>\n      </AppExpansionPanel>\n    ),\n    [rule],\n  );\n};\n\nexport default RuleForm;\n","import React, { useMemo, useEffect } from 'react';\nimport RuleForm from './forms/RuleForm';\nimport {\n  Grid,\n  Button,\n  TextField,\n  Box,\n  Container,\n  ButtonGroup,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport _ from 'lodash';\nimport IRule from '../types/IRule';\nimport IManipulator from '../types/IManipulator';\nimport IFromEventDefinition from '../types/IFromEventDefinition';\nimport IToEventDefinition from '../types/IToEventDefinition';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addRule, setTitle, setWholeState } from '../ducks/formState';\nimport IFormState from '../types/IFormState';\nimport { ALL_KEYS } from '../constants';\n\ninterface Props {}\ninterface FormState {\n  title: string;\n  rules: any[];\n}\n// TODO: move to separate file\nconst toFields: string[] = [\n  'to',\n  'to_if_alone',\n  'to_if_held_down',\n  'to_after_key_up',\n];\n\nconst parseJSONfirst = (text: any) => {\n  let parsedJSON;\n  if (typeof text === 'string') {\n    parsedJSON = JSON.parse(text);\n  } else if (typeof text === 'object') {\n    parsedJSON = { ...text };\n  }\n  parsedJSON.rules = parsedJSON.rules.map((rule: any) => {\n    rule.description = rule.description || '';\n    rule.manipulators = rule.manipulators || [];\n    rule.manipulators = rule.manipulators.map((manipulator: any) => {\n      manipulator.type = manipulator.type || 'basic';\n      manipulator.from = manipulator.from || {\n        modifiers: {\n          mandatory: [],\n          optional: [],\n        },\n        simultaneous: [],\n        simultaneous_options: {\n          detect_key_down_uninterruptedly: false,\n          to_after_key_up: [],\n        },\n      };\n      if (typeof manipulator.from.key_code === 'string') {\n        const kc = manipulator.from.key_code;\n        manipulator.from.key_code = _.find(ALL_KEYS, { value: kc }) || {\n          label: kc,\n          value: kc,\n        };\n      }\n      manipulator.conditions = manipulator.conditions || [];\n      manipulator.to = manipulator.to || [];\n      manipulator.to_after_key_up = manipulator.to_after_key_up || [];\n      manipulator.to_if_alone = manipulator.to_if_alone || [];\n      manipulator.to_if_held_down = manipulator.to_if_held_down || [];\n      manipulator.to_delayed_action = manipulator.to_delayed_action || {\n        to_if_invoked: [],\n        to_if_canceled: [],\n      };\n      return manipulator;\n    });\n    return rule;\n  });\n\n  return parsedJSON;\n};\nconst parseKey = (key: any) =>\n  typeof key === 'string' ? key : key.value || '';\n\nconst parseKeys = (modifiers: any[]) => {\n  return modifiers.map(parseKey);\n};\n\nconst parseFromObject = (fromObject: IFromEventDefinition): any => {\n  const _from = { ...fromObject };\n  if (_.isEmpty(_from)) {\n    return;\n  }\n\n  if (typeof _from.key_code === 'object' && _from.key_code) {\n    _from.key_code = parseKey(_from.key_code);\n  }\n  if (_from.modifiers) {\n    if (_from.modifiers.mandatory) {\n      if (_from.modifiers.mandatory?.length === 0) {\n        delete _from.modifiers.mandatory;\n      } else {\n        if (typeof _from.modifiers.mandatory === 'string') {\n          _from.modifiers.mandatory = [_from.modifiers.mandatory];\n        }\n        _from.modifiers.mandatory = parseKeys(_from.modifiers.mandatory);\n      }\n    }\n    if (_from.modifiers.optional) {\n      if (_from.modifiers.optional.length === 0) {\n        delete _from.modifiers.optional;\n      } else {\n        if (typeof _from.modifiers.optional === 'string') {\n          _from.modifiers.optional = [_from.modifiers.optional];\n        }\n        _from.modifiers.optional = parseKeys(_from.modifiers.optional);\n      }\n    }\n  }\n\n  if (_from?.simultaneous_options?.to_after_key_up?.length === 0) {\n    delete _from.simultaneous_options.to_after_key_up;\n  }\n  if (_from?.simultaneous?.length === 0) {\n    delete _from.simultaneous;\n  }\n  if (_from?.simultaneous?.length) {\n    _from.simultaneous = _from.simultaneous.map(sim => {\n      if (sim.key_code) {\n        sim.key_code = parseKey(sim.key_code);\n      }\n      return sim;\n    });\n  }\n\n  if (\n    _.isEqual(_from.simultaneous_options, {\n      detect_key_down_uninterruptedly: false,\n    })\n  ) {\n    delete _from.simultaneous_options;\n  }\n  if (!_from.pointing_button || _from.pointing_button === 'disabled') {\n    delete _from.pointing_button;\n  }\n  if (_.isEmpty(_from.modifiers)) {\n    delete _from.modifiers;\n  }\n  return _from;\n};\n\nconst parseToObject = (toObject: IToEventDefinition): any => {\n  const _to = { ...toObject };\n  if (typeof _to.key_code === 'object') {\n    _to.key_code = parseKey(toObject.key_code);\n  }\n  if (_to.modifiers?.length) {\n    _to.modifiers = parseKeys(_to.modifiers);\n  }\n  return _to;\n};\n\nconst parseRuleObject = (rule: IRule): any => {\n  const _rule = { ...rule };\n  if (!rule?.description?.length) {\n    delete rule.description;\n  }\n  rule.manipulators = rule.manipulators.map((manipulator: IManipulator) => {\n    manipulator.from = parseFromObject(manipulator.from);\n    toFields.forEach(toField => {\n      if (!manipulator[toField]) return;\n      if (manipulator[toField]?.length === 0) {\n        delete manipulator[toField];\n        return;\n      }\n      manipulator[toField] = manipulator[toField].map(\n        (toObject: IToEventDefinition) => {\n          return parseToObject(toObject);\n        },\n      );\n    });\n\n    if (manipulator?.to_delayed_action?.to_if_invoked?.length === 0) {\n      delete manipulator.to_delayed_action.to_if_invoked;\n    }\n    if (manipulator?.to_delayed_action?.to_if_canceled?.length === 0) {\n      delete manipulator.to_delayed_action.to_if_canceled;\n    }\n    if (_.isEmpty(manipulator?.to_delayed_action)) {\n      delete manipulator.to_delayed_action;\n    }\n\n    if (manipulator?.conditions?.length === 0) {\n      delete manipulator.conditions;\n    }\n    return manipulator;\n  });\n  return _rule;\n};\n\nconst parseStateToMinimumJSON = (state: any) => {\n  const parsedState = _.cloneDeep(state);\n  parsedState.rules = parsedState.rules.map((rule: IRule) => {\n    return parseRuleObject(rule);\n  });\n  return parsedState;\n};\n\nconst MainForm: React.FC<Props> = () => {\n  const formState = useSelector((state: IFormState) => state);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const state = JSON.parse(\n        window.atob(\n          window.location.href.slice(window.location.href.indexOf('#') + 1),\n        ),\n      );\n      dispatch(setWholeState(parseJSONfirst(state)));\n    } catch (e) {}\n  }, []);\n\n  const parsedState = parseStateToMinimumJSON(formState);\n\n  const install = () => {\n    const base64string = window.btoa(JSON.stringify(parsedState));\n    let url = `karabiner://karabiner/assets/complex_modifications/import?url=data:application/json;charset=utf-8;base64,${base64string}`;\n    window.location.href = url;\n  };\n  const generateUrl = () => {\n    const base64string = window.btoa(JSON.stringify(parsedState));\n    window.history.replaceState(undefined, '', '#' + base64string);\n    alert('copy the url in your addess bar to share');\n  };\n\n  const titleForm = useMemo(() => {\n    return (\n      <Box m={1}>\n        <TextField\n          fullWidth\n          onChange={e => dispatch(setTitle(e.target.value))}\n          value={formState.title}\n          variant=\"outlined\"\n          label=\"Modification Title\"\n        />\n      </Box>\n    );\n  }, [formState.title]);\n  return (\n    <Container className=\"app-container\">\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={8} className=\"form-wrapper\">\n          {titleForm}\n          <Box p={1}>\n            {formState.rules.map((rule, index) => (\n              <RuleForm index={index} key={index} rule={rule} />\n            ))}\n            <Box mt={2}>\n              <Button\n                onClick={() => dispatch(addRule())}\n                fullWidth\n                color=\"primary\"\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n              >\n                Rule\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid container xs={4} item direction=\"column\">\n          <Box p={2}>\n            <Typography>Your Modification</Typography>\n            <textarea\n              className=\"generated-code\"\n              // value={JSON.stringify(formState, null, 2)}\n              readOnly\n              value={JSON.stringify(parsedState, null, 2)}\n            />\n\n            <Box mt={1} mb={1}>\n              <ButtonGroup fullWidth>\n                <Button onClick={install} color=\"primary\" variant=\"contained\">\n                  Install!\n                </Button>\n                <Button\n                  onClick={generateUrl}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Share!\n                </Button>\n              </ButtonGroup>\n            </Box>\n            <textarea\n              placeholder=\"Paste existing modification here to edit\"\n              className=\"paste-code\"\n              onBlur={e => {\n                try {\n                  if (e.target.value)\n                    dispatch(setWholeState(parseJSONfirst(e.target.value)));\n                } catch (e) {\n                  console.log({ e });\n                }\n              }}\n            />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\nexport default MainForm;\n","import React from 'react';\nimport {\n  Container,\n  AppBar,\n  Typography,\n  Toolbar,\n  Grid,\n  Box,\n} from '@material-ui/core';\n\nimport MainForm from './components/MainForm';\n\ninterface Props {}\n\nconst AppLayout: React.FC<Props> = () => {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container>\n          <Toolbar variant=\"dense\">\n            <Grid xs item>\n              <Typography>\n                Karabiner Complex Modification | Still a work in progress\n              </Typography>\n            </Grid>\n            <Grid xs={3} item container justify=\"flex-end\">\n              <a\n                className=\"github-button\"\n                href=\"https://github.com/genesy/karabiner-complex-rules-generator\"\n                data-icon=\"octicon-star\"\n                data-size=\"large\"\n                data-show-count=\"true\"\n                aria-label=\"Star genesy/karabiner-complex-rules-generator on GitHub\"\n              >\n                Star\n              </a>\n            </Grid>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Box marginTop={1}>\n        <MainForm />\n      </Box>\n    </>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport './App.css';\nimport '@material-ui/core';\nimport 'typeface-roboto';\nimport AppLayout from './AppLayout';\nimport { formStateReducer } from './ducks/formState';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(formStateReducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <AppLayout />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}